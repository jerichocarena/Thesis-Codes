library("phyloseq")
library("ggplot2")
library("dplyr")
library("ggpubr")

# Load the files: raw counts table, taxonomy table, metadata (all in .csv)
# In this example, the Overall is the raw counts table, the OTU_Table is the taxonomy table, and the Metadata, as the name suggests, is the metadata file.
head(RawData)
head(OTUs)
head(MetadataSite)

setdiff(rownames(RawData),OTUs$Genus)
## character(0)

rownames(OTUs) <- OTUs$Genus
OTUs =  as.matrix(OTUs)

OTU = otu_table(RawData, taxa_are_rows = TRUE)
TAX = tax_table(OTUs)
sampledata = sample_data(MetadataSite)
physeq1 = phyloseq(OTU, TAX, sampledata)

physeq1

sample_data(physeq1)$Group <- factor((sample_data(physeq1)$Group), levels=c("Site 1","Site 2","Site 3"))

richness <- estimate_richness(physeq1)
head(richness)
plot_richness(physeq1)
# boxplot generation
plot_richness(physeq1, x="Site", measures="Shannon", color = "Site")+
  geom_boxplot(alpha=0.6)+ 
  theme(legend.position="none", axis.text.x=element_text(angle=45,hjust=1,vjust=1,size=12))
  
        
a_my_comparisons <- list( c("Site 1", "Site 2"), c("Site 1", "Site 3"), c("Site 2", "Site 3"))
symnum = c(0, 0.0001, 0.001, 0.01, 0.05, 1), symbols = c("****", "***", "**", "*", "ns"))

plot_richness(physeq1, x="Site", measures="Shannon", color = "Site")+
  geom_boxplot(alpha=0.6)+ 
  theme(legend.position="none", axis.text.x=element_text(angle=45,hjust=1,vjust=1,size=12))+
  stat_compare_means(method = "wilcox.test", comparisons = a_my_comparisons, label = "p.signif", symnum = symnum)

#POST-HOC ANALYSIS

# A histogram can be created to check if the Shannon values estimated for the metagenomes are normally distributed:
hist(richness$Shannon, main="Shannon index", xlab="")
# If it is normally distributed, we can run anova tests and check if the variable Group impacts the Shannon diversity:
anova.sh = aov(richness$Shannon ~ sample_data(physeq1)$Group)
summary(anova.sh)
TukeyHSD(anova.sh)

# For Non-normally distributed data, we can use Kruskal-Wallis Rank Sum Test:
kruskal.test(richness$Shannon ~ sample_data(physeq1)$Group)
# We can also get a list with the p-values resulted of the Wilcoxon Tests considering each pair of groups:
pairwise.wilcox.test(richness$Shannon, sample_data(physeq1)$Group, p.adj = "bonf")
